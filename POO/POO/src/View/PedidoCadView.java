/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.CarroController;
import Controller.ClienteController;
import Controller.ItemController;
import Controller.PedidoController;
import DAO.ItemDAO;
import Model.CarroModel;
import Model.ClienteModel;
import Model.ItemModel;
import Model.PedidosModel;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabinator 2.0
 */
public class PedidoCadView extends javax.swing.JFrame {

    /**
     * Creates new form PedidoCad
     */
    public PedidoCadView() {
        initComponents();
        init();
    }

    public void init() {
        DefaultTableModel tabela = (DefaultTableModel) TabelaItem.getModel();

        ItemController controlador = new ItemController();
        ArrayList<ItemModel> lista;
        lista = new ArrayList<>();
        lista = controlador.getItens();
        for (ItemModel i : lista) {
            Object[] dados = {i.getCod(), i.getOferta(), i.getPreco()};
            tabela.addRow(dados);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaItem = new javax.swing.JTable();
        addItem = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        FormaPagamento = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaPedido = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cpf = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        placaCarro = new javax.swing.JFormattedTextField();

        TabelaItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelaItem);

        addItem.setText("Adicionar item");
        addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemActionPerformed(evt);
            }
        });

        jButton2.setText("Remover último");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Comprar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setText("Faça o seu Pedido");

        code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeActionPerformed(evt);
            }
        });

        jLabel2.setText("Digite nome do Item");

        FormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cartão", "Dinheiro" }));
        FormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormaPagamentoActionPerformed(evt);
            }
        });

        jLabel3.setText("Forma de Pagamento:");

        TabelaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TabelaPedido);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Serviços:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Itens do pedido:");

        jLabel6.setText("CPF do cliente:");

        jLabel7.setText("Placa do carro:");

        try {
            placaCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAA-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(code)
                    .addComponent(addItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addComponent(FormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(cpf, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(placaCarro))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel4))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(addItem)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(placaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int validacao = 0;
        if (cpf.getText().equals("") || TabelaPedido.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Validar");
        } else {
            ClienteController clienteC = new ClienteController();
            ArrayList<ClienteModel> arrayC = new ArrayList<>();
            arrayC = clienteC.getCliente();
            for (int i = 0; i < arrayC.size(); i++) {
                if (arrayC.get(i).getCpf().compareToIgnoreCase(cpf.getText()) == 0) {
                    validacao = 1;
                }
            }
        }
        if(validacao == 0){
            JOptionPane.showMessageDialog(null, "CPF INVALIDO!");
        }
        if (validacao == 1) {
            CarroController carroC = new CarroController();
            ArrayList<CarroModel> arrayCarro = new ArrayList<>();
            arrayCarro = carroC.getItens();
            for (int i = 0; i < arrayCarro.size(); i++) {
                if (arrayCarro.get(i).getPlaca().compareToIgnoreCase(placaCarro.getText()) == 0) {
                    validacao++;
                }
            }
        }
        
        if(validacao == 2){
            PedidoController pedidoC = new PedidoController();
            ArrayList<PedidosModel> arrayP = new ArrayList<>();
            arrayP = pedidoC.GetPedidos();
            
            for (int i = 0; i < arrayP.size(); i++) {
                if(arrayP.get(i).getPlaca().compareToIgnoreCase(placaCarro.getText()) == 0){
                    validacao = validacao + 2;
                }
            }
            
        }
        if (validacao == 1) {
            JOptionPane.showMessageDialog(null, "Por favor, primeiro cadastre o carro!");
        }
        if (validacao == 4){
            JOptionPane.showMessageDialog(null, "Ja existe um pedido para esse carro");
        }
        if (validacao == 2) {
            float total = 0;
            int convert;
            boolean existeEstoque = true;
            ArrayList<Integer> array = new ArrayList();
            int rows = TabelaPedido.getRowCount();
            for (int i = 0; i < rows; i++) {
                total = total + Float.parseFloat(TabelaPedido.getValueAt(i, 2).toString());
                System.out.println(total);
                convert = Integer.parseInt(TabelaPedido.getValueAt(i, 0).toString());
                array.add(convert);
                System.out.println(array.get(i));
            }
            ItemController itemC = new ItemController();
            ArrayList<ItemModel> arrayI = new ArrayList();
            arrayI = itemC.getItens();
            for (int i = 0; i < array.size(); i++) {
                for (int j = 0; j < arrayI.size(); j++) {
                    if (array.get(i) == arrayI.get(j).getCod()) {
                        existeEstoque = itemC.removeEstoque(array.get(i));
                    }
                }
            }
            if (existeEstoque == true) {
                String varName = (String) FormaPagamento.getSelectedItem();
                String value = FormaPagamento.getSelectedItem().toString();

                ArrayList<PedidosModel> lista;
                lista = new ArrayList<>();
                PedidoController p;
                p = new PedidoController();

                lista = p.GetPedidos();
                int codigo;
                if (lista.isEmpty()) {
                    codigo = 1;
                } else {
                    codigo = lista.get(lista.size() - 1).getCodigo();
                    codigo = codigo + 2;
                }

                PedidosModel novo;
                novo = new PedidosModel(codigo, "Em Fila", value, total, cpf.getText(), placaCarro.getText());

                p.CadPedidoDAO(novo);
                JOptionPane.showMessageDialog(null, "Pedido Cadastrado");
            } else {
                JOptionPane.showMessageDialog(null, "Infelizmente, está em falta no estoque favor verificar o estoque de itens");
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemActionPerformed
        if (code.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha com um codigo");
        } else {
            DefaultTableModel tabela = (DefaultTableModel) TabelaPedido.getModel();
            ItemController item = new ItemController();
            ArrayList<ItemModel> lista = new ArrayList<>();
            lista = item.getItens();
            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Não há itens cadastrados");
            } else {
                int codigo;
                codigo = Integer.parseInt(code.getText());
                for (ItemModel i : lista) {
                    if (codigo == i.getCod()) {
                        Object[] dados = {i.getCod(), i.getOferta(), i.getPreco()};
                        tabela.addRow(dados);
                        return;
                    }
                }
                JOptionPane.showMessageDialog(null, "Item não encontrado");
            }
        }
    }//GEN-LAST:event_addItemActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        DefaultTableModel tabela = (DefaultTableModel) TabelaPedido.getModel();
        if (tabela.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Não há itens a serem removidos");
        } else {
            tabela.removeRow(tabela.getRowCount() - 1);
        }
        System.out.println();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void FormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormaPagamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FormaPagamentoActionPerformed

    private void codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PedidoCadView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PedidoCadView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PedidoCadView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PedidoCadView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PedidoCadView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> FormaPagamento;
    private javax.swing.JTable TabelaItem;
    private javax.swing.JTable TabelaPedido;
    private javax.swing.JButton addItem;
    private javax.swing.JTextField code;
    private javax.swing.JTextField cpf;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFormattedTextField placaCarro;
    // End of variables declaration//GEN-END:variables
}
