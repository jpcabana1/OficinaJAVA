/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.CarroController;
import Controller.ClienteController;
import Controller.ItemController;
import Controller.OfertaController;
import Controller.PedidoController;
import Model.CarroModel;
import Model.ClienteModel;
import Model.ItemModel;
import Model.OfertaModel;
import Model.PedidosModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hique
 */
public class OfertaVerView extends javax.swing.JFrame {

    /**
     * Creates new form VerOferta
     */
    public OfertaVerView() {
        initComponents();
        init();
    }

    public void init() {
        DefaultTableModel tabela = (DefaultTableModel) TabelaItem.getModel();
        OfertaController controlador = new OfertaController();
        ArrayList<OfertaModel> lista;
        lista = new ArrayList<>();
        lista = controlador.getOferta();
        for (OfertaModel i : lista) {
            Object[] dados = {i.getCod(), i.getOferta(), i.getPreco()};
            tabela.addRow(dados);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaItem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        codigoServico = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cpfCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        placaCarro = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        FormaPagamento = new javax.swing.JComboBox<>();

        setTitle("Comprar Oferta");

        TabelaItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Oferta", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelaItem);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Digite o codigo do servico para comprar");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Digite o cpf do cliente");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Placa do carro");

        try {
            placaCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAA-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Comprar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        FormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cartão", "Dinheiro", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(placaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(codigoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codigoServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(placaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int validacao = 0;
        String nome1, nome2;
        if (cpfCliente.getText().equals("") || codigoServico.getText().equals("")
                || placaCarro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencher Todos os campos");
        } else if (codigoServico.getText().matches("[0-9]+") == false) {
            JOptionPane.showMessageDialog(null, "Codigo invalido!");
        } else {
            ClienteController clienteC = new ClienteController();
            ArrayList<ClienteModel> arrayC = new ArrayList<>();
            arrayC = clienteC.getCliente();
            for (int i = 0; i < arrayC.size(); i++) {
                if (arrayC.get(i).getCpf().compareToIgnoreCase(cpfCliente.getText()) == 0) {
                    validacao = 1;
                }
            }
        }
        if (validacao == 0) {
            JOptionPane.showMessageDialog(null, "CPF INVALIDO!");
        }
        if (validacao == 1) {
            CarroController carroC = new CarroController();
            ArrayList<CarroModel> arrayCarro = new ArrayList<>();
            arrayCarro = carroC.getItens();
            for (int i = 0; i < arrayCarro.size(); i++) {
                if (arrayCarro.get(i).getPlaca().compareToIgnoreCase(placaCarro.getText()) == 0) {
                    validacao++;
                }
            }
        }
        if(validacao == 2){
        PedidoController pedidoC = new PedidoController();
            ArrayList<PedidosModel> arrayP = new ArrayList<>();
            arrayP = pedidoC.GetPedidos();
            
            for (int i = 0; i < arrayP.size(); i++) {
                if(arrayP.get(i).getPlaca().compareToIgnoreCase(placaCarro.getText()) == 0){
                    JOptionPane.showMessageDialog(null, "Ja existe um pedido para esse carro");
                    return;
                }
            }
        }
        if (validacao == 2) {
            boolean existeEstoque = false;
            String get1, get2;
            int arrayOposition = 0;
            int spacePos1, spacePos2, codServ;
            codServ = Integer.parseInt(codigoServico.getText());
            ArrayList<OfertaModel> arrayO = new ArrayList();
            OfertaController ofertaC = new OfertaController();
            arrayO = ofertaC.getOferta();

            for (int i = 0; i < arrayO.size(); i++) {
                if (arrayO.get(i).getCod() == codServ) {
                    existeEstoque = true;
                    arrayOposition = i;
                    break;
                }
            }
            if (existeEstoque == true) {
                ItemController itemC = new ItemController();
                ArrayList<ItemModel> arrayI = new ArrayList();
                arrayI = itemC.getItens();
                spacePos1 = arrayO.get(arrayOposition).getOferta().indexOf(" ");
                get1 = arrayO.get(arrayOposition).getOferta().substring(0, spacePos1);
                spacePos1 = spacePos1 + 3;
                spacePos2 = arrayO.get(arrayOposition).getOferta().length();
                get2 = arrayO.get(arrayOposition).getOferta().substring(spacePos1, spacePos2);
                for (int i = 0; i < arrayI.size(); i++) {
                    if (get1.compareToIgnoreCase(arrayI.get(i).getOferta()) == 0) {
                        if (existeEstoque == true) {
                            existeEstoque = itemC.removeEstoque(arrayI.get(i).getCod());
                        }
                    } else if (get2.compareToIgnoreCase(arrayI.get(i).getOferta()) == 0) {
                        if (existeEstoque == true) {
                            existeEstoque = itemC.removeEstoque(arrayI.get(i).getCod());
                        }
                    }
                }

                if (existeEstoque == true) {
                    float total = arrayO.get(arrayOposition).getPreco();
                    String varName = (String) FormaPagamento.getSelectedItem();
                    String value = FormaPagamento.getSelectedItem().toString();

                    ArrayList<PedidosModel> lista;
                    lista = new ArrayList<>();
                    PedidoController p;
                    p = new PedidoController();

                    lista = p.GetPedidos();
                    int codigo;
                    if (lista.isEmpty()) {
                        codigo = 1;
                    } else {
                        codigo = lista.get(lista.size() - 1).getCodigo();
                        codigo = codigo + 2;
                    }

                    PedidosModel novo;
                    novo = new PedidosModel(codigo, "Em fila", value, total, cpfCliente.getText(), placaCarro.getText());

                    p.CadPedidoDAO(novo);
                    JOptionPane.showMessageDialog(null, "Pedido Cadastrado");
                } else {
                    JOptionPane.showMessageDialog(null, "Infelizmente, está em falta no estoque favor verificar o estoque de itens");
                }
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OfertaVerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OfertaVerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OfertaVerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OfertaVerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OfertaVerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> FormaPagamento;
    private javax.swing.JTable TabelaItem;
    private javax.swing.JTextField codigoServico;
    private javax.swing.JTextField cpfCliente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField placaCarro;
    // End of variables declaration//GEN-END:variables
}
